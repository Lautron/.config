global !p
import glob
def get_files(pattern):
  return glob.glob(pattern)
def get_o():
  o_files = get_files("*.o")
  o_from_c = [filename.replace(".c", ".o") for filename in get_files("*.c")]
  files = set(o_from_c + o_files)

  return " ".join(list(files))
endglobal

snippet ctemp "Template" b
CC = gcc
GDB = gdb
VAL = valgrind
CFLAGS = -Wall -Werror -Wextra -ansi -pedantic -std=c99 -g
VFLAGS = --leak-check=full --show-leak-kinds=all --track-origins=yes -s
HEADERS = $(wildcard *.h)
SOURCES = $(wildcard *.c)
OBJECTS = $(SOURCES:.c=.o)
TARGET = main
ARGS = $1

%.o : %.c $(HEADERS)
	$(CC) $(CFLAGS) -c $< -o $@

$(TARGET): $(OBJECTS)
	$(CC) $(CFLAGS) -o $@ $^ $(LDFLAGS)

run: $(TARGET)
	./$^ $(ARGS)

gdb: $(TARGET)
	$(GDB) --args ./$^ $(ARGS)
	
val: $(TARGET)
	$(VAL) $(VFLAGS) ./$^ $(ARGS)

.PHONY: clean

clean:
	rm -f $(OBJECTS) $(TARGET)

endsnippet

